/*
  CJ Karinen
  Keeps track of a beekeeper's monthly earnings 
  CS101-02
  8/3/2020 - 8/4/2020
*/

import java.util.*;

public class BeeKeepingIncome
{
 /* 
   Main Algorithm: 
   Create 4 seperate methods that individually calculate the revenue 
   generated by their respective category and return a Double. A 5th
   method runs the 4 previous methods indivdually and prints their values
   then adds them all together and prints the final monthly sum.
 */
    
 /* 
   Main Data Table:
 
 (PPU = Price Per Unit)
 
      |jars |honey|honeycombs|rentals|
 Units|cases| lbs |    lbs   | weeks |
 PPU  |45.36|0.99 |   2.49   | 534.99|
 */
   public static void main(String [] args) //main
   {
      Scanner scnr = new Scanner(System.in);
      monthlyRevenue(scnr);
   }
   
   public static double jarRevenue(Scanner s)
   {
      System.out.println("Enter number of jars sold: ");
      int jars = s.nextInt();
      double cases = Math.rint((jars / 24));
      double jarEarnings = (cases * 45.36);
      return jarEarnings;
   }
   
   public static double honeyRevenue(Scanner s)
   {
      System.out.println("Enter pounds of honey sold: ");
      int honey = s.nextInt();
      double honeyEarnings = (honey * .99);
      return honeyEarnings;
   }
   
   public static double honeyCombRevenue(Scanner s)
   {
      System.out.println("Enter pounds of honeycombs sold: ");
      int honeyCombs = s.nextInt();
      double honeyCombEarnings = (honeyCombs * 2.49);
      return honeyCombEarnings;
   }
   
   public static double hiveRentalRevenue(Scanner s)
   {
      System.out.println("Enter total number of rental weeks: ");
      int rentalWeeks = s.nextInt();
      double rentalEarnings = (rentalWeeks * 534.99);
      return rentalEarnings;
   }
   
   public static void monthlyRevenue(Scanner s)
   {
      double jars = Math.rint(jarRevenue(s));
      System.out.println("Honey Jar earnings for this month: $" + jars);
      System.out.println();
      
      double honey = Math.rint(honeyRevenue(s));
      System.out.println("Raw Honey earnings for this month: $" + honey);
      System.out.println();
      
      double honeyCombs = Math.rint(honeyCombRevenue(s));
      System.out.println("Honeycomb earnings for this month: $" + honeyCombs);
      System.out.println();
      
      double rentals = Math.rint(hiveRentalRevenue(s));
      System.out.println("Hive Rental earnings for this month: $" + rentals);
      System.out.println();
      
      double monthlySum = Math.rint((jars + honey + honeyCombs + rentals));
      System.out.println("Total earnings for this month: $" + monthlySum);
   }
   
/*
For each method other than main, put the algorithm, data table and
code for the method here.  Keep the algorithm, data table, and code for 
each method together as a group.

jarRevenue Algorithm:
Scan number of jars sold as an input, declare 
double cases as the number of jars divided by 
24(24 jars in one case) then rounded up the nearest tenth.
Another double is declared as cases multiplied by the price per case
(45.36), and returned. 

honeyRevenue, honeyCombRevenue and hiveRentalRevenue Algorithm:
Scan in our input (Pounds of honey or honeycombs or weeks rented)
then assign that number to an int. Create and assign a new double as 
the previously declared int multiplied by our price per unit. Return 
the final double value.

jarRevenue Datatable:
(JPU = Jars Per Unit)

      |jars |     
 Units|cases|
 JPU  |  24 |
 PPU  |45.36|
honeyRevenue Datatable:
      |honey|
 Units| lbs |
 PPU  |0.99 |
honeyCombRevenue Datatable:
      |honeycombs|
 Units|    lbs   |
 PPU  |   2.49   |
hiveRentalRevenue Datatable:
      |rentals|
 Units| weeks |
 PPU  | 534.99|
*/   
}

